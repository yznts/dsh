name: Release

on:
  release:
    types:
      - published

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  docker:
    name: Release Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  binaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
        - name: Check out
          uses: actions/checkout@v4

        - name: Go Release Daemon
          uses: wangyoucao577/go-release-action@v1
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            goos: ${{ matrix.goos }}
            goarch: ${{ matrix.goarch }}
            multi_binaries: true
            project_path: ./cmd/...
            build_flags: -ldflags="-s -w" -tags daemon
            asset_name: ${BINARY_NAME}-daemon-${RELEASE_TAG}-${{ matrix.goos }}-${{ matrix.goarch }}

        - name: Go Release Daemonless
          uses: wangyoucao577/go-release-action@v1
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            goos: ${{ matrix.goos }}
            goarch: ${{ matrix.goarch }}
            multi_binaries: true
            project_path: ./cmd/...
            build_flags: -ldflags="-s -w"
            asset_name: ${BINARY_NAME}-daemonless-${RELEASE_TAG}-${{ matrix.goos }}-${{ matrix.goarch }}
